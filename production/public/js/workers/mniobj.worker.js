/*! 
 * Copyright (C) 2011 McGill University
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var stack;var result={};self.addEventListener("message",function(b){var a=b.data;parse(a);self.postMessage(result)});function parse(b){var a=b.replace(/\s+$/,"");var c=a.replace(/^\s+/,"");result.num_hemispheres=1;stack=c.split(/\s+/).reverse();result.objectClass=stack.pop();if(result.objectClass==="P"){parseSurfProp();result.numberVertices=parseInt(stack.pop());parsePositionArray();parseNormalArray();result.nitems=parseInt(stack.pop())}else{if(result.objectClass==="L"){parseSurfProp();result.numberVertices=parseInt(stack.pop());parsePositionArray();result.nitems=parseInt(stack.pop())}else{result.objectClass="__FAIL__";return}}parseColorArray();parseEndIndices();parseIndexArray();if(result.objectClass=="P"){if(result.positionArray.length==81924*3){result.brainSurface=true;split_hemispheres()}}}function parseSurfProp(){if(result.objectClass=="P"){result.surfaceProperties={ambient:parseFloat(stack.pop()),diffuse:parseFloat(stack.pop()),specular_reflectance:parseFloat(stack.pop()),specular_scattering:parseFloat(stack.pop()),transparency:parseFloat(stack.pop())}}else{if(result.objectClass=="L"){result.surfaceProperties={width:stack.pop()}}}}function parsePositionArray(){var b=[];var a=result.numberVertices;var c,d;for(c=0;c<a;c++){for(d=0;d<3;d++){b.push(parseFloat(stack.pop()))}}result.positionArray=b}function parseNormalArray(){var c=[];var a=result.numberVertices;var d,b;for(d=0;d<a;d++){for(b=0;b<3;b++){c.push(parseFloat(stack.pop()))}}result.normalArray=c}function parseColorArray(){var d=[];var e=parseInt(stack.pop(),10);var a,f,b;if(e===0){for(a=0;a<4;a++){d.push(parseFloat(stack.pop()))}}else{if(e===1){for(f=0,b=result.numberPolygons;f<b;f++){for(a=0;a<4;a++){d.push(parseFloat(stack.pop()))}}}else{if(e===2){for(f=0,b=result.numberVertices;f<b;f++){for(a=0;a<4;a++){d.push(parseFloat(stack.pop()))}}}else{throw new Error("colorFlag not valid in that file")}}}result.colorFlag=e;result.colorArray=d}function parseEndIndices(){var a=result.nitems;var c=result.endIndicesArray;var c=[];var d,b;for(d=0,b=result.nitems;d<b;d++){c.push(parseInt(stack.pop(),10))}result.endIndicesArray=c}function parseIndexArray(){var d=stack.length;var b=[];var a;var c,e;for(c=0,e=stack.length;c<d;c++){a=parseInt(stack.pop(),10);b.push(a)}result.indexArray=b}function split_hemispheres(){var c={};var j={};var k;var b;var a,e,d,h;var f,g;a=result.positionArray.length;c.positionArray=result.positionArray.slice(0,a/2);j.positionArray=result.positionArray.slice(a/2,a);e=result.indexArray.length;c.indexArray=result.indexArray.slice(0,e/2);j.indexArray=result.indexArray.slice(e/2,e);k=j.indexArray;b=e/3/2/2;for(f=0,g=k.length;f<g;f++){k[f]=k[f]-2-b}d=result.normalArray.length;c.normalArray=result.normalArray.slice(0,d/2);j.normalArray=result.normalArray.slice(d/2,d);c.colorFlag=result.colorFlag;j.colorFlag=result.colorFlag;if(result.colorFlag===0||result.colorFlag===1){c.colorArray=result.colorArray;j.colorArray=result.colorArray}else{h=result.colorArray.length;c.colorArray=result.colorArray.slice(0,h/2);j.colorArray=result.colorArray.slice(h/2+1,-1)}c.numberVertices=result.numberVertices/2;j.numberVertices=result.numberVertices/2;c.numberPolygons=result.numberPolygons/2;j.numberPolygons=result.numberPolygons/2;result.num_hemispheres=2;result.left=c;result.right=j};