/*
 * Copyright (C) 2011 McGill University
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* brainbrowser v0.9.1 */
!function(){"use strict";var a=BrainBrowser.VolumeViewer;a.globalUIControls=function(a,b){var c=$('<div id="global-controls" class="volume-viewer-controls"></div>'),d=$('<input type="checkbox" class="button" id="sync"><label for="sync">Sync Volumes</label>');d.change(function(){b.synced=d.is(":checked")}),c.append(d);var e=$('<span id="capture" class="button">Capture Slices</span>');e.click(function(){var a=b.displays[0][0].canvas.width,c=b.displays[0][0].canvas.height,d=b.active_canvas,e=document.createElement("canvas"),f=e.getContext("2d"),g=new Image;e.width=a*b.displays.length,e.height=3*c,b.active_canvas=null,b.draw(),b.displays.forEach(function(b,d){b.forEach(function(b,e){f.drawImage(b.canvas,d*a,e*c)})}),b.active_canvas=d,b.draw(),g.onload=function(){$("<div></div>").append(g).dialog({title:"Slices",height:g.height,width:g.width})},g.src=e.toDataURL()}),c.append(e),$(a).append(c)},a.volumeUIControls=function(b,c,d,e){b=$(b),a.coordinateUI(b,c,d,e),"multivolume"===d.type?a.blendUI(b,c,d,e):(a.colorScaleUI(b,c,d,e),a.thresholdUI(b,c,d,e),d.data.time&&a.timeUI(b,c,d,e),a.sliceSeriesUI(b,c,d,e))},a.coordinateUI=function(a,b,c){var d,e,f;c.getWorldCoords&&(d=$('<div class="coords"></div>'),e=$('<div class="control-heading">World Coordinates: </div><div class="world-coords">X:<input id="world-x" class="control-inputs"></input>Y:<input id="world-y" class="control-inputs"></input>Z:<input id="world-z" class="control-inputs"></input></div>').change(function(){var a={x:+e.find("#world-x").val(),y:+e.find("#world-y").val(),z:+e.find("#world-z").val()};c.setWorldCoords(a.x,a.y,a.z),b.redrawVolumes()}),f=$('<div class="control-heading">Voxel Coordinates: </div><div class="voxel-coords">X:<input id="voxel-x" class="control-inputs"></input>Y:<input id="voxel-y" class="control-inputs"></input>Z:<input id="voxel-z" class="control-inputs"></input></div>').change(function(){var a={x:+f.find("#voxel-x").val(),y:+f.find("#voxel-y").val(),z:+f.find("#voxel-z").val()};c.setVoxelCoords(a.x,a.y,a.z),b.redrawVolumes()}),b.addEventListener("sliceupdate",function(){var a=c.getWorldCoords(),b=c.getVoxelCoords();e.find("#world-x").val(a.x),e.find("#world-y").val(a.y),e.find("#world-z").val(a.z),f.find("#voxel-x").val(b.x),f.find("#voxel-y").val(b.y),f.find("#voxel-z").val(b.z)})),d.append(e),d.append(f),a.append(d)},a.blendUI=function(a,b,c){var d=$('<div id="blend-slider" class="slider volume-viewer-blend"></div>'),e=$('<div class="control-heading">Blend (-50 to 50): </div>'),f=$('<input class="control-inputs" value="0" id ="blend-val"/>');e.append(f),e.append(d),a.append(e),d.slider({min:-50,max:50,step:1,slide:function(a,d){var e=parseInt(d.value,10);c.updateBlendRatio(e),b.redrawVolumes(),f.val(e)},stop:function(){$(this).find("a").blur()}}),f.change(function(){var a=this.value;d.slider("value",a),c.updateBlendRatio(a),b.redrawVolumes()})},a.colorScaleUI=function(b,c,d){var e=$("<select></select>"),f="";a.colorScales.forEach(function(a,b){f+='<option value="'+b+'"'+(c.defaultScale===a?" SELECTED":"")+">"+a.name+"</option>"}),e.html(f),e.change(function(b){d.colorScale=a.colorScales[+$(b.target).val()],c.redrawVolumes()}),b.append($('<div class="control-heading">Color Scale: </div>').append(e))},a.thresholdUI=function(a,b,c){var d=$('<div class="slider volume-viewer-threshold"></div>'),e=$('<div class="control-heading" class="slider-div">Threshold: </div>'),f=$('<input class="control-inputs thresh-input-left" value="0"/>'),g=$('<input class="control-inputs thresh-input-right" value="255"/>'),h=$('<div class="thresh-inputs"></div>');h.append(f).append(g),e.append(h),a.append(e),e.append(d),d.slider({range:!0,min:0,max:255,values:[0,255],step:1,slide:function(a,d){var e=d.values;c.min=e[0],c.max=e[1],b.redrawVolumes(),f.val(e[0]),g.val(e[1])},stop:function(){$(this).find("a").blur()}}),f.change(function(){var a=this.value;d.slider("values",0,a),c.min=a,b.redrawVolumes()}),g.change(function(){var a=this.value;d.slider("values",1,a),c.max=a,b.redrawVolumes()})},a.timeUI=function(a,b,c,d){var e,f=$('<div class="control-heading" class="slider-div">Time: </div>'),g=$('<div class="slider volume-viewer-threshold"></div>'),h=$('<input class="control-inputs" value="0" id ="time-val"/>'),i=$('<input type="checkbox" class="button" id="play-'+d+'"><label for="play-'+d+'">Play</label>'),j=0,k=c.data.time.space_length-1;g.slider({min:j,max:k,value:0,step:1,slide:function(a,d){var e=+d.value;h.val(e),c.current_time=e,b.redrawVolumes()},stop:function(){$(this).find("a").blur()}}),h.change(function(){var a=Math.max(j,Math.min(k,parseInt(this.value,10)));h.val(a),g.slider("value",a),c.current_time=a,b.redrawVolumes()}),i.change(function(){i.is(":checked")?(clearInterval(e),e=setInterval(function(){var a=c.current_time+1;a=a>k?0:a,c.current_time=a,h.val(a),g.slider("value",a),b.redrawVolumes()},200)):clearInterval(e)}),f.append(h),f.append(g),a.append(f),a.append(i)},a.sliceSeriesUI=function(a,b,c){var d=$('<div class="control-heading">All slices: </div>'),e=$("<div></div>"),f=$('<span class="slice-series button" data-axis="xspace" style="font-size: 11px">Sagittal</span>'),g=$('<span class="slice-series button" data-axis="yspace" style="font-size: 11px">Coronal</span>'),h=$('<span class="slice-series button" data-axis="zspace" style="font-size: 11px">Transverse</span>'),i={xspace:"Sagittal",yspace:"Coronal",zspace:"Transverse"};e.append(f),e.append(g),e.append(h),e.find(".slice-series").click(function(){var a,b,d,e=$(this).data("axis"),f=c.data[e],g=f.space_length,h=c.current_time,j=10,k=.5,l=document.createElement("canvas"),m=l.getContext("2d"),n=c.slice(e,0,h).getImage(k),o=new Image;for(l.width=j*n.width,l.height=(g/j+1)*n.height,a=0;g>a;a++)n=c.slice(e,a,h).getImage(k),b=a%j*n.width,d=parseInt(a/j,10)*n.height,m.putImageData(n,b,d);o.onload=function(){$("<div></div>").append(o).dialog({title:i[e]+" Slices",height:600,width:o.width})},o.src=l.toDataURL()}),d.append(e),a.append(d)}}();